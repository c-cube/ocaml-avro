
(rule
  (alias runtest)
  (deps llist.json)
  (package avro)
  (action (run ./bin/parse_print_parse.exe %{deps})))


(rule
  (alias runtest)
  (deps cards.json)
  (package avro)
  (action (run ./bin/parse_print_parse.exe %{deps})))


(rule
  (alias runtest)
  (deps avro_file_header.json)
  (package avro)
  (action (run ./bin/parse_print_parse.exe %{deps})))

(rule
  (alias runtest)
  (deps records.json)
  (package avro)
  (action (run ./bin/parse_print_parse.exe %{deps})))

(rule
  (alias runtest)
  (deps employee.json)
  (package avro)
  (action (run ./bin/parse_print_parse.exe %{deps})))

(rule
  (targets records.ml)
  (deps records.json)
  ;(package avro)
  (action (run %{bin:avro-compiler} %{deps} -o %{targets})))

(executable
  (name records_test)
  (modules records_test records)
  (libraries avro))

(rule
  (targets records_hash)
  (locks /thash)
  (package avro)
  (action
    (progn
      (setenv
        "N" "100_000"
        (setenv
          "OUT" "tmp.data"
          (run ./records_test.exe)))
      (with-stdout-to %{targets}
                      (run sha256sum "tmp.data")))))

(rule
  (alias runtest)
  (deps records_hash)
  (package avro)
  (action (diff records_hash.expected records_hash)))

(rule
  (targets records_hash_deflate)
  (locks /thash)
  (package avro)
  (action
    (progn
      (setenv
        "CODEC" "deflate"
        (setenv
          "N" "100_000"
          (setenv
            "OUT" "tmp.data"
            (run ./records_test.exe))))
      (with-stdout-to %{targets}
                      (run sha256sum "tmp.data")))))


(rule
  (alias runtest)
  (deps records_hash)
  (package avro)
  (action (diff records_hash_deflate.expected records_hash_deflate)))

(rule
  (targets employee.ml)
  (deps employee.json)
  (action (run %{bin:avro-compiler} %{deps} -o %{targets})))

(executable
  (name employee_test)
  (modules employee_test employee)
  (libraries avro))

(rule
  (targets employee_test.out)
  (locks /thash)
  (package avro)
  (action
    (with-stdout-to
      %{targets}
      (setenv
        "CODEC" "deflate"
        (setenv
          "N" "1_000_000"
          (run ./employee_test.exe))))))

(rule
  (alias runtest)
  (package avro)
  (action (diff employee_test.expected employee_test.out)))

(env
  (_ (flags :standard -warn-error -a)))

